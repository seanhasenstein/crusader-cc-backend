type Item {
  productId: ID!
  quantity: Int!
  size: String!
}

input ItemInput {
  productId: ID!
  quantity: Int!
  size: String!
}

type Order {
  id: ID!
  date: String!
  customer: String!
  email: String!
  phone: String!
  student: String!
  items: [Item]!
  orderTotal: Int!
  paymentStatus: Boolean!
  notes: String!
}

input NewOrderInput {
  customer: String!
  email: String!
  phone: String!
  student: String!
  items: [ItemInput]!
}

input UpdateOrderInput {
  customer: String
  email: String
  phone: String
  student: String
  items: [ItemInput]
  paymentStatus: Boolean
  notes: String
}

extend type Query {
  order(id: ID!): Order!
  orders: [Order]!
}

extend type Mutation {
  newOrder(input: NewOrderInput!): Order!
  updateOrder(id: ID!, input: UpdateOrderInput!): Order!
  removeOrder(id: ID!): Order!
}
